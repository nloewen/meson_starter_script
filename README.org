#+TITLE: Meson start scripts

* Skeleton C++ project

A simple script to create a messon project skeleton

#+NAME: cpp_meson
#+BEGIN_SRC meson
project('@ProjectSkeleton@', 'cpp',
	version : '0.0.1',
	default_options : ['cpp_std=c++17'])

KissCore_proj = subproject('KissCore')
KissCore_dep = KissCore_proj.get_variable('KissCore_dep')

gtest_proj = subproject('gtest')
gtest_dep = gtest_proj.get_variable('gtest_main_dep')

subdir('src')
subdir('test')
subdir('examples')
subdir('doc')
#+END_SRC

#+NAME: cpp_meson_src
#+BEGIN_SRC meson
inc = include_directories('.')

subdir('@ProjectSkeleton@')
#+END_SRC

** =src/project= 

#+NAME: cpp_meson_src_project 
#+BEGIN_SRC meson
inc = include_directories('.')

subdir('@ProjectSkeleton@')
#+END_SRC


#+NAME: cpp_meson_src_project_hello_hpp
#+BEGIN_SRC cpp :eval never
#include<string>

std::string hello();
#+END_SRC


#+BEGIN_SRC bash :noweb yes :tangle yes :tangle create_meson_cpp_skeleton_project :shebang "#!/bin/bash" :exports code :eval never
set -e

ERROR=0
FORCE=0
PROJECT_ROOT_DIRECTORY=""

while [ "$1" != "" ]; do
    case $1 in
        -f )       FORCE=1
		   ;;
	-* )       ERROR=1
                   ;;
        ,* )       if [ "$PROJECT_ROOT_DIRECTORY" == "" ]; then 
		      PROJECT_ROOT_DIRECTORY=$1 
		  else 
		      ERROR=1 
		  fi 
    esac
    shift
done

if [ $ERROR == 1 ]; then
    echo "Usage: $(basename $0) PROJECT_ROOT_DIRECTORY -f"
    echo ""
    echo " Create a directory 'project_dir' and populate it with some configuration files"
    echo " By default never overwrite files, use -f to force overwriting"
    exit 0
fi

PROJECT_NAME=$(basename "$PROJECT_ROOT_DIRECTORY")

#================================================================

echo "Creates directory $PROJECT_ROOT_DIRECTORY" 
mkdir -p "$PROJECT_ROOT_DIRECTORY"

#----------------

CURRENT_FILE="$PROJECT_ROOT_DIRECTORY/meson.build"

if [ "$FORCE" -eq 1 ] || [ ! -f "$CURRENT_FILE" ]; then
    echo "Creates file      $CURRENT_FILE" 
    more > "$CURRENT_FILE" <<'//MY_CODE_STREAM' 
<<cpp_meson>>
//MY_CODE_STREAM
    sed -i "s/@ProjectSkeleton@/$PROJECT_NAME/g" "$CURRENT_FILE"
else 
    echo "File $CURRENT_FILE already exists, aborted! (you can use -f to force overwrite)" 
    exit 1
fi

#================================================================

echo "Creates directory $PROJECT_ROOT_DIRECTORY/src" 
mkdir -p "$PROJECT_ROOT_DIRECTORY/src"

#----------------

CURRENT_FILE="$PROJECT_ROOT_DIRECTORY/src/meson.build"

if [ "$FORCE" -eq 1 ] || [ ! -f "$CURRENT_FILE" ]; then
    echo "Creates file      $CURRENT_FILE" 
    more > "$CURRENT_FILE" <<'//MY_CODE_STREAM' 
<<cpp_meson_src>>
//MY_CODE_STREAM
    sed -i "s/@ProjectSkeleton@/$PROJECT_NAME/g" "$CURRENT_FILE"
else 
    echo "File $CURRENT_FILE already exists, aborted! (you can use -f to force overwrite)" 
    exit 1
fi

#================================================================

echo "Creates directory $PROJECT_ROOT_DIRECTORY/src/$PROJECT_NAME" 
mkdir -p "$PROJECT_ROOT_DIRECTORY/src/$PROJECT_NAME"

#----------------

CURRENT_FILE="$PROJECT_ROOT_DIRECTORY/src/$PROJECT_NAME/meson.build"

if [ "$FORCE" -eq 1 ] || [ ! -f "$CURRENT_FILE" ]; then
    echo "Creates file      $CURRENT_FILE" 
    more > "$CURRENT_FILE" <<'//MY_CODE_STREAM' 
<<cpp_meson_src_project>>
//MY_CODE_STREAM
#    sed -i "s/@ProjectSkeleton@/$PROJECT_NAME/g" "$CURRENT_FILE"
else 
    echo "File $CURRENT_FILE already exists, aborted! (you can use -f to force overwrite)" 
    exit 1
fi

#----------------

CURRENT_FILE="$PROJECT_ROOT_DIRECTORY/src/$PROJECT_NAME/hello.hpp"

if [ "$FORCE" -eq 1 ] || [ ! -f "$CURRENT_FILE" ]; then
    echo "Creates file      $CURRENT_FILE" 
    more > "$CURRENT_FILE" <<'//MY_CODE_STREAM' 
<<cpp_meson_src_project_hello_hpp>>
//MY_CODE_STREAM
#    sed -i "s/@ProjectSkeleton@/$PROJECT_NAME/g" "$CURRENT_FILE"
else 
    echo "File $CURRENT_FILE already exists, aborted! (you can use -f to force overwrite)" 
    exit 1
fi

#+END_SRC
